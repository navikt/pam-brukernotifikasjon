micronaut:
  application:
    name: brukernotifikasjon
  server:
    port: 9029
    context-path: /pam-brukernotifikasjon
  metrics:
    enabled: true
    sensitive: false
    binders:
      jvm:
        enabled: true
    export:
      prometheus:
        enabled: true
        descriptions: false
io:
  micronaut:
    context:
      condition: true
datasources:
  default:
    url: 'jdbc:h2:mem:flywayDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE'
    username: 'sa'
    password: ''
    driverClassName: 'org.h2.Driver'
jpa:
  default:
    packages-to-scan:
      - 'no.nav.cv.person'
      - 'no.nav.cv.notifikasjon'
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: true
flyway:
  datasources:
    default:
      locations: classpath:databasemigrations

kafka:
  producers:
    default:
      key:
        serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value:
        serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  consumers:
    pam-brukernotifikasjon-cv:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      specific:
        avro:
          reader: false
    pam-brukernotifikasjon-oppfolging:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
  bootstrap:
    servers:
      - 10.183.160.26:8443
      - 10.183.32.47:8443
      - 10.183.32.48:8443
  health:
    enabled: false
  security:
    protocol: SASL_SSL
  sasl:
    jaas:
      config: 'org.apache.kafka.common.security.plain.PlainLoginModule required username=${KAFKA_SERVICE_USER} password=${KAFKA_SERVICE_PASSWORD};'
    mechanism: PLAIN
  ssl:
    truststore:
      location: ${NAV_TRUSTSTORE_PATH}
      password: ${NAV_TRUSTSTORE_PASSWORD}
  schema:
    registry:
      url: http://kafka-schema-registry.tpa:8081

