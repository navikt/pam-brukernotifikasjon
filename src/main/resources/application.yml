micronaut:
  application:
    name: brukernotifikasjon
  server:
    port: 9029
    context-path: /pam-brukernotifikasjon
  metrics:
    enabled: true
    sensitive: false
    binders:
      jvm:
        enabled: true
    export:
      prometheus:
        enabled: true
        descriptions: false
datasources:
  default:
    url: 'jdbc:h2:mem:flywayDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE'
    username: 'sa'
    password: ''
    driverClassName: 'org.h2.Driver'
jpa:
  default:
    packages-to-scan:
      - 'no.nav.cv.repository'
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: true
flyway:
  datasources:
    default:
      locations: classpath:databasemigrations

kafka:
  key:
    serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    deserializer: org.apache.kafka.common.serialization.StringDeserializer
  value:
    serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
    deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
  bootstrap:
    servers:
      - 10.183.160.26:8443
      - 10.183.32.47:8443
      - 10.183.32.48:8443
  security:
    protocol: SASL_SSL
  sasl:
    jaas:
      config: 'org.apache.kafka.common.security.plain.PlainLoginModule required username=${KAFKA_CV_USER} password=${KAFKA_CV_PASSWORD};'
    mechanism: PLAIN
  ssl:
    truststore:
      location: ${NAV_TRUSTSTORE_PATH}
      password: ${NAV_TRUSTSTORE_PASSWORD}
  schema:
    registry:
      url: http://kafka-schema-registry.tpa:8081

# config:
#   kafka:
#    producer:
#      brukernotifikasjon:
#        bootstrapServers: 10.183.160.26:8443,10.183.32.47:8443,10.183.32.48:8443
#        schemaRegistryUrl: http://kafka-schema-registry.tpa:8081
#        groupId: pam-brukernotifikasjon
#        systemUserName: ${KAFKA_BRUKERNOTIFIKASJON_USER}
#        systemUserPassword: ${KAFKA_BRUKERNOTIFIKASJON_PASSWORD}