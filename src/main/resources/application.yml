micronaut:
  application:
    name: brukernotifikasjon
  server:
    port: 9029
    context-path: /pam-brukernotifikasjon
  metrics:
    enabled: true
    sensitive: false
    binders:
      jvm:
        enabled: true
    export:
      prometheus:
        enabled: true
        descriptions: false
io:
  micronaut:
    context:
      condition: true
db:
  vault:
    path: ${DB_VAULT_PATH:`postgresql/preprod`}
    username: ${DB_VAULT_USERNAME:`pam-brukernotifikasjon-admin`}
datasources:
  default:
    minimumIdle: 0
    maximumPoolSize: 4
    idleTimeout: 10001
    maxLifetime: 30001
    connectionTestQuery: "select 1"
    jdbcUrl: ${JDBC_URL:`jdbc:postgresql://localhost:5432/pam-brukernotifikasjon`}
    driverClassName: 'org.postgresql.Driver'
jpa:
  default:
    packages-to-scan:
      - 'no.nav.cv.person'
      - 'no.nav.cv.notifikasjon'
    properties:
      hibernate:
        hbm2ddl:
          auto: none
        show_sql: false
flyway:
  datasources:
    default:
      locations: classpath:databasemigrations
      initSql:
        - 'SET ROLE "pam-brukernotifikasjon-admin"'

kafka:
  producers:
    default:
      key:
        serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      value:
        serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
  consumers:
    pam-brukernotifikasjon-cv-v4:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      specific:
        avro:
          reader: false
    pam-brukernotifikasjon-oppfolging-v1:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
    pam-brukernotifikasjon-person-v1:
      key:
        deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value:
        deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      specific:
        avro:
          reader: false
  topics:
    consumers:
      cv_endret: ${KAFKA_CONSUMER_TOPIC_CV_ENDRET:`arbeid-pam-cv-endret-v4-q0`}
      endring_status_oppfolging: ${KAFKA_CONSUMER_TOPIC_ENDRING_STATUS_OPPFOLGING:`aapen-fo-endringPaaOppfolgingStatus-v1-q0`}
      pdl_id: ${KAFKA_CONSUMER_TOPIC_PDL_ID:`privat-person-pdl-aktor-v1`}
    producers:
      ny_oppgave: ${KAFKA_PRODUCER_TOPIC_NY_OPPGAVE:`aapen-brukernotifikasjon-nyOppgave-v1`}
      done: ${KAFKA_PRODUCER_TOPIC_DONE:`aapen-brukernotifikasjon-done-v1`}
  bootstrap:
    servers:
      - 10.183.160.26:8443
      - 10.183.32.47:8443
      - 10.183.32.48:8443
  health:
    enabled: false
  security:
    protocol: SASL_SSL
  sasl:
    jaas:
      config: 'org.apache.kafka.common.security.plain.PlainLoginModule required username=${KAFKA_SERVICE_USER} password=${KAFKA_SERVICE_PASSWORD};'
    mechanism: PLAIN
  ssl:
    truststore:
      location: ${NAV_TRUSTSTORE_PATH}
      password: ${NAV_TRUSTSTORE_PASSWORD}
  schema:
    registry:
      url: http://kafka-schema-registry.tpa:8081
personIdent:
  admin:
    enabled: ${PERSON_IDENT_ADMIN_ENABLED:`disabled`}

oppfolgingstatus:
  sts:
    host: ${SECURITY_TOKEN_SERVICE:`http://localhost:8901`}
    serviceuser:
      username: ${PAMCVAPI_USERNAME:`srvpam-cv-api`}
      password: ${PAMCVAPI_PASSWORD:`dummy`}
  feed:
    host: ${OPPFOLGING_FEED:`http://localhost:8902`}


shedlock:
  defaults:
    lock-at-most-for: 5m

output.melding.link: ${OUTPUT_MELDING_LINK:`https://arbeidsplassen.nav.no/cv`}
