plugins {
    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.kapt" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id "com.github.johnrengelman.shadow" version "5.2.0"
    id "application"
}

version "0.1"
group "no.nav.cv"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven { url "http://packages.confluent.io/maven/" }
    maven { url "https://github-package-registry-mirror.gc.nav.no/cached/maven-release" }
    maven { url "https://github-package-registry-mirror.gc.nav.no/cached/maven-release"}
    maven { url 'https://jitpack.io' }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
    implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.5'

    // SNYK fixes
    implementation "org.dom4j:dom4j:2.1.3"
    implementation "org.postgresql:postgresql:42.2.13"
    implementation "org.hibernate:hibernate-core:5.4.18.Final"

    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut.sql:micronaut-hibernate-jpa"
    implementation "io.micronaut.sql:micronaut-hibernate-jpa-spring"
    implementation "io.micronaut.sql:micronaut-jdbc-hikari"
    implementation "io.micronaut.kafka:micronaut-kafka:2.0.0"
    implementation "io.micronaut:micronaut-runtime"
    implementation "io.micronaut:micronaut-http-server-netty"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut.flyway:micronaut-flyway"
    implementation 'net.javacrumbs.shedlock:shedlock-micronaut:4.12.0'
    implementation 'net.javacrumbs.shedlock:shedlock-provider-jdbc-template:4.12.0'

    implementation "javax.annotation:javax.annotation-api"
    implementation "net.logstash.logback:logstash-logback-encoder:6.2"

    implementation "io.confluent:kafka-streams-avro-serde:${confluentVersion}"
    implementation "org.apache.avro:avro:${avroVersion}"
    implementation 'org.json:json:20190722'
    implementation "com.github.navikt:brukernotifikasjon-schemas:${brukernotifikasjonerVersion}"
    implementation "no.nav:vault-jdbc:1.3.7"

    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"

    kapt platform ("io.micronaut:micronaut-bom:$micronautVersion")
    kapt "javax.persistence:javax.persistence-api:2.2"
    kapt "io.micronaut:micronaut-inject-java"
    kapt "io.micronaut:micronaut-validation"
    kaptTest platform ("io.micronaut:micronaut-bom:$micronautVersion")
    kaptTest "io.micronaut:micronaut-inject-java"
    testImplementation platform ("io.micronaut:micronaut-bom:$micronautVersion")

    testImplementation "io.micronaut.test:micronaut-test-kotlintest"
    testImplementation "io.mockk:mockk:1.9.3"
    testImplementation "io.kotlintest:kotlintest-runner-junit5:3.3.2"
    testImplementation "org.junit.jupiter:junit-jupiter:5.6.2"
    testImplementation "io.micronaut.test:micronaut-test-junit5:1.1.3"
    testImplementation "org.testcontainers:kafka:1.13.0"
    implementation "com.h2database:h2"

    implementation "io.micronaut.micrometer:micronaut-micrometer-core"
    implementation "io.micrometer:micrometer-registry-prometheus:1.6.4"

}

test.classpath += configurations.developmentOnly

mainClassName = "no.nav.cv.Application"

test {
    useJUnitPlatform()
    testLogging {
        events("passed", "skipped", "failed")
    }
}

allOpen {
	annotation("io.micronaut.aop.Around")
}

compileKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}

compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '1.8' 
	    javaParameters = true 
	}
}

shadowJar {
    mergeServiceFiles()
}

tasks.withType(JavaExec) {
    classpath += configurations.developmentOnly
    jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
}
